= form_for([:official, @race], html: { class: 'form' }) do |f|
  = render partial: 'shared/form_errors', locals: { item: @race }
  %h2= t 'official.races.form.basic_information'
  = f.hidden_field :sport_key
  .form__field.form__field--md.row
    .col-xs-12.col-sm-3= f.label :sport_key
    .col-xs-12.col-sm-9= t "sport_name.#{@race.sport_key}"
  - if @race.sport.nordic?
    .form__field.row
      .col-xs-12.col-sm-3= f.label :nordic_sub_results_for_series
      .col-xs-12.col-sm-9= f.check_box :nordic_sub_results_for_series
  .form__field.row
    .col-xs-12.col-sm-3= f.label :name
    .col-xs-12.col-sm-9= f.text_field :name
  .form__field.form__field--md.row
    .col-xs-12.col-sm-3= f.label :district
    .col-xs-12.col-sm-9= f.collection_select(:district_id, District.all, :id, :name, prompt: true)
  .form__field.row
    .col-xs-12.col-sm-3= f.label :location
    .col-xs-12.col-sm-9= f.text_field :location
  - start_year = [Date.today.year - 1, @race.start_date.year].min
  .form__field.form__field--date.row
    .col-xs-12.col-sm-3= f.label :start_date
    .col-xs-12.col-sm-9= f.date_select :start_date, start_year: start_year, end_year: Date.today.year + 1
  .form__field.form__field--sm.row
    .col-xs-12.col-sm-3= f.label :start_time
    .col-xs-12.col-sm-9= f.time_select :start_time, value: @race.start_time
  .form__field.form__field--md.row
    .col-xs-12.col-sm-3= f.label :days_count
    .col-xs-12.col-sm-9= f.select :days_count, 7.times.map {|i| [t(:days, count: i + 1), i + 1]}
  #level_row.form__field.form__field--lg.row
    .col-xs-12.col-sm-3= f.label :level
    .col-xs-12.col-sm-9= f.select :level, Race::ALL_LEVELS.reverse.map {|level| [t("levels_long.#{level}"), level]}, prompt: true
  .form__field.row
    .col-xs-12.col-sm-3
      %label= t 'official.races.form.competitor_organisation'
    .col-xs-12.col-sm-9
      = f.radio_button :club_level, Race::CLUB_LEVEL_SEURA
      = f.label "club_level_#{Race::CLUB_LEVEL_SEURA}", t(:club), class: 'form__label--radio'
      = f.radio_button :club_level, Race::CLUB_LEVEL_PIIRI
      = f.label "club_level_#{Race::CLUB_LEVEL_PIIRI}", t(:district), class: 'form__label--radio'
      = f.radio_button :club_level, Race::CLUB_LEVEL_COUNTRY, class: 'club_level_country'
      = f.label "club_level_#{Race::CLUB_LEVEL_COUNTRY}", t(:country), class: 'form__label--radio club_level_country'
  - if @race.sport.start_list?
    .form__field.row
      .col-xs-12.col-sm-3
        .form__help-label
          = f.label :reveal_distances
          %span.help{'data-dialog': 'reveal_distances_help_dialog'} ?
      .col-xs-12.col-sm-9= f.check_box :reveal_distances
  - if @race.sport.european?
    .form__field.row
      .col-xs-12.col-sm-3= f.label :show_european_shotgun_results
      .col-xs-12.col-sm-9= f.check_box :show_european_shotgun_results
    .form__field.row
      .col-xs-12.col-sm-3= f.label :double_competition
      .col-xs-12.col-sm-9= f.check_box :double_competition
  - unless @race.new_record?
    .form__field.row
      .col-xs-12.col-sm-3= f.label :cancelled
      .col-xs-12.col-sm-9= f.check_box :cancelled
  %h2= t 'official.races.form.organizer_information'
  .form__field.row
    .col-xs-12.col-sm-3= f.label :organizer
    .col-xs-12.col-sm-9= f.text_field :organizer
  .form__field.row
    .col-xs-12.col-sm-3
      .form__help-label
        = f.label :address
        %span.help{'data-dialog': 'address_help_dialog'} ?
    .col-xs-12.col-sm-9= f.text_field :address
  .form__field.row
    .col-xs-12.col-sm-3
      .form__help-label
        = f.label :home_page
        %span.help{'data-dialog': 'home_page_help_dialog'} ?
    .col-xs-12.col-sm-9= f.url_field :home_page
  .form__field.form__field--md.row
    .col-xs-12.col-sm-3= f.label :organizer_phone
    .col-xs-12.col-sm-9= f.telephone_field :organizer_phone
  .form__field.row
    .col-xs-12.col-sm-3
      .form__help-label
        = f.label :public_message
        %span.help{'data-dialog': 'public_message_help_dialog'} ?
    .col-xs-12.col-sm-9= f.text_area :public_message, cols: 50, rows: 6

  - if @race.sport.start_list?
    = render layout: 'official/shared/dialog', locals: { id: 'reveal_distances_help_dialog', title: 'Paljasta oikeat etäisyydet heti' } do
      %h3 Kun asetus ei ole valittuna
      %p
        Normaalisti oikeat etäisyydet paljastetaan vasta, kun kilpailu on merkitty päättyneeksi.
        Tällä tavoin voidaan helposti varmistaa, etteivät kilpailijat saa tietää niitä ennen kuin
        ovat suorittaneet matkansa. Arviopisteet näytetään kuitenkin heti, kun kilpailijalle on
        tiedossa sekä arviot että hänen lähtönumeronsa oikeat etäisyydet.
      %h3 Kun asetus on valittuna
      %p
        Jos tämä asetus laitetaan päälle, kilpailijan kohdalla näytetään oikeat etäisyydet heti,
        kun ne ovat tiedossa. Tätä vaihtoehtoa voidaan käyttää esim. monipäiväisissä kilpailuissa,
        joissa joka päivälle on eri arviomatkat. Toimitsijan vastuulla on tällöin tallentaa oikeat
        etäisyydet vasta silloin, kun kaikki päivän kilpailijat ovat tulleet maaliin.

  = render layout: 'official/shared/dialog', locals: { id: 'home_page_help_dialog', title: 'Linkki kilpailun sivuille' } do
    Jos kilpailusta on tarjolla lisätietoa esimerkiksi piirin tai seuran
    omilla sivuilla, voit laittaa tähän linkin kyseiselle sivulle.
    Voit myös jättää kentän tyhjäksi.

  = render layout: 'official/shared/dialog', locals: { id: 'heat_size_help_dialog', title: 'Lähtöerät' } do
    %p
      Lähtöerien avulla voit luoda taukoa kilpailijoiden välille.
      Voit esimerkiksi määrittää lähtöerän kooksi 20 kilpailijaa,
      jonka jälkeen tulee lähtöajoissa tauko. Nämä asetukset otetaan huomioon,
      kun luodaan lähtölistoja.
    %p Mikäli haluat, että kaikki kilpailijat lähtevät tasaisin väliajoin, jätä kentän arvoksi 0.
    %p Lähtöeriä käytetään yleensä suuremmissa kilpailuissa, jotta esimerkiksi ammuntapaikoille ei tulisi liikaa ruuhkaa.

  = render layout: 'official/shared/dialog', locals: { id: 'start_order_help_dialog', title: 'Kilpailijoiden lähtöjärjestys' } do
    %p Kilpailijoiden lähtöjärjestys vaikuttaa siihen, kuinka lähtölistat luodaan.
    %h3 Pääsääntöisesti sarjoittain
    %p
      Tässä vaihtoehdossa kilpailijat lähtevät liikkeelle pääsääntöisesti sarja
      kerrallaan (poikkeukset ovat siis mahdollisia). Toimitsijan kannalta se tarkoittaa
      sitä, että kun olet syöttänyt sarjan kilpailijat, voit järjestelmän avulla
      luoda sarjalle kätevästi lähtölistan.
    %h3 Sarjat sekaisin
    %p
      Tässä vaihtoehdossa kilpailijoiden sarjat eivät vaikuta lähtöaikaan, pikemminkin
      kilpailijoiden lisäysjärjestys. Toimitsijan kannalta tämä tarkoittaa sitä,
      että kun olet lisäämässä kilpailijaa, sinun täytyy myös määrittää hänelle lähtöaika
      ja lähtönumero. Lähtölistat syntyvät näin ollen samalla, kun lisäät kilpailijoita.

  = render layout: 'official/shared/dialog', locals: { id: 'address_help_dialog', title: 'Kilpailupaikan osoite' } do
    %p Kilpailupaikan osoite. Syötä osoite sellaisessa muodossa, jossa Google sen tunnistaa, esim. "Kilpailukatu 15, Kisakylä".
    %p Kilpailun etusivulle luodaan Google Maps -linkki tämän osoitteen avulla.

  = render layout: 'official/shared/dialog', locals: { id: 'public_message_help_dialog', title: t('attributes.public_message') } do
    %p
      Tähän kenttään kirjoittamasi viesti tulee näkyviin kilpailun etusivulle.
      Voit tiedottaa sen avulla kilpailun tärkeistä asioista kilpailijoille ja kilpailua seuraavalla yleisölle.
    %p
      Voit muotoilla tekstiä tai lisätä linkkejä
      = link_to 'markdown-tekniikan', 'https://www.markdownguide.org/cheat-sheet/', target: '_blank'
      avulla.

  - if @race.sport.start_list?
    %h2= t 'official.races.form.start_times'
    .form__field.form__field--sm.row
      .col-xs-12.col-sm-3= f.label :start_interval_seconds
      .col-xs-12.col-sm-9
        = f.number_field :start_interval_seconds, maxlength: 3, min: 0
        = t 'official.races.form.seconds'
    .form__field.row
      .col-xs-12.col-sm-3
        .form__help-label
          = f.label :start_order, t('attributes.start_order')
          %span.help{'data-dialog': 'start_order_help_dialog'} ?
      .col-xs-12.col-sm-9
        = f.radio_button :start_order, Race::START_ORDER_NOT_SELECTED, style: 'display:none;'
        = f.radio_button :start_order, Race::START_ORDER_BY_SERIES
        = f.label "start_order_#{Race::START_ORDER_BY_SERIES}", t('official.races.form.competitors_start_order_series'), class: 'form__label--radio'
        = f.radio_button :start_order, Race::START_ORDER_MIXED
        = f.label "start_order_#{Race::START_ORDER_MIXED}", t('official.races.form.competitors_start_order_mixed'), class: 'form__label--radio'

    .form__field.form__field--sm.heat_size_row.row
      .col-xs-12.col-sm-3
        .form__help-label
          = f.label :heat_size
          %span.help{'data-dialog': 'heat_size_help_dialog'} ?
      .col-xs-12.col-sm-9
        = f.number_field :heat_size, maxlength: 3, min: 0
        (0 = #{t 'official.races.form.start_heats_not_in_use'})

    .form__field.form__field--sm.heat_size_row.row
      .col-xs-12.col-sm-3= f.label :heat_interval_seconds
      .col-xs-12.col-sm-9
        = f.number_field :heat_interval_seconds, maxlength: 3, min: 1
        = t 'official.races.form.seconds'

  - if @race.sport.heat_list?
    %h2= t :heat_list
    .form__field.form__field--sm.row
      .col-xs-12.col-sm-3= f.label :track_count
      .col-xs-12.col-sm-9= f.number_field :track_count, maxlength: 2, min: 1
    .form__field.form__field--sm.row
      .col-xs-12.col-sm-3= f.label :shooting_place_count
      .col-xs-12.col-sm-9= f.number_field :shooting_place_count, maxlength: 3, min: 1
    .form__field.form__field--sm.row
      - label = @race.sport.one_heat_list? ? t('attributes.hide_heats') : nil
      .col-xs-12.col-sm-3= f.label :hide_qualification_round_heats, label
      .col-xs-12.col-sm-9= f.check_box :hide_qualification_round_heats
    - unless @race.sport.one_heat_list?
      .form__field.form__field--sm.row
        .col-xs-12.col-sm-3= f.label :hide_final_round_heats
        .col-xs-12.col-sm-9= f.check_box :hide_final_round_heats

  - unless @race.new_record? || @race.api_secret.blank?
    %h2 API
    .form__field.form__field--md.row
      .col-xs-12.col-sm-3= t :race_id
      .col-xs-12.col-sm-9= @race.id
    .form__field.form__field--md.row
      .col-xs-12.col-sm-3= t 'attributes.api_secret'
      .col-xs-12.col-sm-9
        %a{href: '#', onClick: "event.preventDefault(); $('#api_secret').show(); $(this).hide()"}= t :show
        %span#api_secret{style: 'display: none'}= @race.api_secret

  - if @race.new_record?
    %h2= t 'activerecord.models.series.other'
    = render partial: 'series_helper_fields'
  - else
    - unless @race.series.empty?
      .form__buttons
        = submit_tag submit_label, class: 'button button--primary'
    %h2= t 'activerecord.models.series.other'
    = f.fields_for :series do |series_form|
      = render partial: 'series', locals: { f: series_form }
    - if @race.series.empty?
      = render partial: 'series_helper_fields'
    = add_child_link t('official.races.form.add_series'), f, :series, 'add_series_button', 'button button--add'
  .form__buttons
    = submit_tag submit_label, class: 'button button--primary'

:javascript
  function showOrHideHeatSizes() {
    if($("#race_start_order_" + #{Race::START_ORDER_BY_SERIES} + ":checked").length) {
      $(".heat_size_row").show();
    } else {
      $(".heat_size_row").hide();
    }
  }
  $(document).ready(showOrHideHeatSizes);
  $("#race_start_order_" + #{Race::START_ORDER_BY_SERIES}).click(showOrHideHeatSizes);
  $("#race_start_order_" + #{Race::START_ORDER_MIXED}).click(showOrHideHeatSizes);

  $('#add_default_series').change(setSeriesMethodEnabling)
  $('#copy_series').change(setSeriesMethodEnabling)
  $('#add_series_button').click(setSeriesMethodEnabling)
  $('form').on('click', '.remove_series_button', setSeriesMethodEnabling)

  function setSeriesMethodEnabling() {
    var defaultSeries = $('#add_default_series')[0].checked
    var copySeries = !!$('#copy_series').val()
    var series = $('.series-sub-form:visible').length
    if (defaultSeries) {
      $('#copy_series').attr('disabled', true)
      $('#add_series_button').addClass('button--disabled')
    } else if (copySeries) {
      $('#add_default_series').attr('disabled', true)
      $('#add_series_button').addClass('button--disabled')
    } else if (series) {
      $('#add_default_series').attr('disabled', true)
      $('#copy_series').attr('disabled', true)
    } else {
      $('#copy_series').removeAttr('disabled')
      $('#add_default_series').removeAttr('disabled')
      $('#add_series_button').removeClass('button--disabled')
    }
  }

  function showOrHideCountryLevel() {
    if($("#race_level").val() === '#{Race::LEVEL_INTERNATIONAL}') {
      $(".club_level_country").show();
    } else {
      $(".club_level_country").hide();
      if($("#race_club_level_" + #{Race::CLUB_LEVEL_COUNTRY} + ":checked").length) {
        $("#race_club_level_" + #{Race::CLUB_LEVEL_SEURA}).prop('checked', true);
      }
    }
  }
  showOrHideCountryLevel()
  $('#level_row').on('change', 'select', function() { showOrHideCountryLevel() });

= render :partial => 'shared/help_dialog_opener'
