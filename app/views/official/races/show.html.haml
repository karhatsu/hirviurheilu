= content_for(:title, "#{@race.name} - #{t 'official_sub_menu.summary' }")
%h2= t '.single_series'
= flash_error
= flash_success
%h3= t '.manage_race_settings'
.buttons
  - unless @race.finished? || @race.start_date > Time.zone.today || @race.competitors.empty?
    = link_to t('.finish_race'), new_official_race_finish_race_path(@race), class: 'button button--primary button--done'
  = link_to t('.edit_race_and_series'), edit_official_race_path(@race), class: 'button button--edit'
  - unless @race.sport.shooting?
    = link_to t('.correct_estimates'), official_race_correct_estimates_path(@race), class: 'button'
  - if @race.can_destroy?
    = link_to t('.delete_race'), official_race_path(@race), method: :delete, class: 'button button--danger'
%h3= t 'activerecord.models.series.other'
- if @race.series.empty?
  .message.message--info= t('.no_series_for_race')
- elsif @race.competitors.empty?
  .message.message--info= t('.no_competitors_for_race')
- unless @race.series.empty?
  - cache [@race.cache_key_for_all_series, I18n.locale] do
    .row
      - @race.series.includes(:competitors => [:series]).each do |s|
        - competitor_count = s.competitors.size
        - finished = s.finished? || (competitor_count > 0 && s.has_start_list? && s.finished_competitors_count == competitor_count && s.each_competitor_has_correct_estimates?)
        .col-xs-12.col-sm-6.col-md-4
          .card
            .card__middle
              .card__name= s.name
              .card__middle-row= t(:count_competitors, count: competitor_count)
              .card__middle-row
                - if competitor_count == 0
                  - add_competitor_path = @race.start_order == Race::START_ORDER_MIXED ? official_race_start_list_path(@race) : new_official_series_competitor_path(s)
                  = link_to t('.add_series_first_competitor'), add_competitor_path, class: 'button button--add_competitor'
                  = link_to t('official.races.form.remove_series'), official_series_path(s), method: :delete,
                    data: { confirm: t('official.races.form.remove_series_confirm') }, class: 'button button--danger'
                - else
                  = link_to t('activerecord.models.competitor.other'), official_series_competitors_path(s), class: 'button button--competitors'
                  - if @race.sport.start_list? && !s.has_start_list?
                    = link_to t('.create_start_list'), official_series_competitors_path(s), class: 'button'
                  - unless finished
                    - if @race.sport.nordic?
                      = link_to t('.input_results'), official_race_nordic_trap_path(@race), class: 'button'
                    - elsif @race.sport.european?
                      = link_to t('.input_results'), official_race_european_trap_path(@race), class: 'button'
                    - else
                      = link_to t('.input_results'), official_race_quick_saves_path(@race), class: 'button'
                    - if @race.sport.shooting?
                      = link_to t('.finish_series'), new_official_race_finish_race_path(@race, series_id: s.id), class: 'button button--done'
            - if finished
              .card__main-value
                .material-icons-outlined.md-24 done
%h3= t '.add_multiple_competitors'
.buttons
  = link_to t('.copy_competitors'), new_official_race_competitor_copying_path(@race), class: 'button button--copy'
  - unless @race.series.empty?
    = link_to t('.add_competitors_from_csv'), new_official_race_csv_import_path(@race), class: 'button button--add_multiple'
- if @race.sport.batch_list?
  %h3= t :batch_list
  .buttons
    = link_to t('.batches_manually'), official_race_batches_path(@race), class: 'button'
    - unless @race.series.empty?
      - if @race.sport.one_batch_list?
        = link_to t('.batch_list_generation'), official_series_qualification_round_batch_list_path(@race.series.first), class: 'button'
      - else
        = link_to t('.qualification_round_batch_list'), official_series_qualification_round_batch_list_path(@race.series.first), class: 'button'
        = link_to t('.final_round_batch_list'), official_series_final_round_batch_list_path(@race.series.first), class: 'button'
%h3 Tulostus (PDF)
.buttons
  - key = @race.sport.batch_list? ? '.printing_batch_lists_and_numbers' : '.printing_numbers'
  = link_to t(key), official_race_printing_path(@race), class: 'button button--pdf'
  - unless @race.competitors.empty?
    - club_key = @race.club_level == Race::CLUB_LEVEL_SEURA ? '.download_competitors_by_clubs' : '.download_competitors_by_districts'
    = link_to t(club_key), official_race_clubs_competitors_path(@race, format: :pdf), class: 'button button--pdf'
    = link_to t('.download_competitors_by_series'), official_race_competitors_path(@race, format: :pdf), class: 'button button--pdf'
%h3.desktop= t '.other'
.buttons
  = link_to t('.national_records'), official_race_national_records_path(@race), class: 'button'
- if @race.sport.relays?
  %h2= t '.other_race_formats'
  .buttons
    = link_to t('activerecord.models.team_competition.other'), official_race_team_competitions_path(@race), class: 'button'
    = link_to t('activerecord.models.relay.other'), official_race_relays_path(@race), class: 'button'
- else
  %h2= t('activerecord.models.team_competition.other')
  .buttons
    = link_to t('activerecord.models.team_competition.other'), official_race_team_competitions_path(@race), class: 'button'
.buttons.buttons--nav
  = link_to t(:back_to_official_home_page), official_root_path, class: 'button button--back'
