- content_for :title, "#{@race.name} - #{t('.title')}"
%h2 #{@race.name} - #{t('.title')}
- if @batch_options.empty?
  .message.message--info= t '.no_batches'
- else
  = form_tag(official_race_shooting_by_batches_path(@race), method: :get) do
    .form__horizontal-fields
      .form__field
        = select_tag :batch_id, options_for_select(@batch_options, params[:batch_id]), prompt: t('attributes.batch_id')
      .form__buttons
        = submit_tag t('.select_batch'), class: 'button button--primary'
  - if @batch
    %h3
      #{@batch.final_round? ? t('attributes.final_round_batch_id') : t('attributes.qualification_round_batch_id')}: #{@batch.number}, #{batch_time(@race, @batch)}
      - if @batch.track
        (#{t('attributes.track')} #{@batch.track})
    - competitors = @batch.competitors.includes(:series)
    - if competitors.empty?
      = t '.no_competitors_in_batch'
    - else
      .result-cards
        - competitors.each do |competitor|
          .card
            .card__number= competitor.track_place @batch
            .card__middle
              .card__name
                = full_name competitor
                - if competitor.number
                  (##{competitor.number})
                %span.status{id: "status_#{competitor.id}"}
              - unless competitor.no_result_reason
                .card__middle-row
                  = form_for([:official, competitor.series, competitor], remote: true, namespace: "c_#{competitor.id}", html: { id: "shots_form_#{competitor.id}", class: 'form form--inline' }) do |f|
                    = render partial: 'official/shots/all_shooting_race_shots', locals: { f: f, sport: @race.sport, competitor: competitor, show_qualification_round_shots: @batch.qualification_round?, show_final_round_shots: @batch.final_round? }
                    .form__buttons= submit_tag t(:save), onclick: "start_updating(#{competitor.id})", class: 'button button--primary'
            .card__main-value{id: "shots_result_#{competitor.id}"}
              - if competitor.no_result_reason
                = competitor.no_result_reason
              - else
                #{competitor.qualification_round_score.to_i} + #{competitor.final_round_score.to_i} =
                = competitor.shooting_score.to_i
      :javascript
        function start_updating(id) {
          $("#status_" + id).removeClass().html('#{image_tag 'spinner.gif'}');
        }
.buttons.buttons--nav
  = link_to t(:back_to_official_race_page), official_race_path(@race), class: 'button button--back'
:javascript
  $('.shots-total-input').change(function() {
    calculateShotsResult($(this))
    findAndResetInlineMessage($(this))
  });
  $('.shot').change(function() {
    calculateShotsResult($(this))
    findAndResetInlineMessage($(this))
  });
  function calculateShotsResult(field) {
    const $card = field.closest('.card')
    if (#{@race.sport.shooting?}) {
      if (#{!!@batch&.qualification_round?}) {
        calculateShootingRaceShotsResultForQ($card, #{@race.sport.best_shot_value}, #{@race.sport.qualification_round_max_score},
          #{@race.sport.qualification_round_shot_count})
      } else {
        calculateShootingRaceShotsResultForF($card, #{@race.sport.best_shot_value}, #{@race.sport.qualification_round_max_score},
          #{@race.sport.qualification_round_shot_count}, #{@race.sport.shot_count})
      }
    } else {
      calculateThreeSportsShotsResult($card)
    }
  }
