- unofficials_rule = unofficials_result_rule series.race
.result-cards
  - prev_competitor_results = 1.0/0.0
  - series.three_sports_results(unofficials_rule).each_with_index do |comp, i|
    - competitor_results = comp.three_sports_race_results(unofficials_rule)
    .card{class: i % 2 == 0 ? 'card--odd' : ''}
      - if i == 0
        - @max_points = comp.points
      .card__number= "#{i + 1}." unless competitor_results == prev_competitor_results
      .card__middle
        .card__name
          = full_name(comp)
          - if comp.age_group
            .card__name__extra (#{comp.age_group.name})
          - if comp.unofficial?
            .card__name__extra (#{t(:unofficial_short)})
        .card__middle-row= comp.club.name
        - if comp.no_result_reason
          .card__middle-row= t "competitor.#{comp.no_result_reason}"
        - elsif comp.points > 0
          .card__middle-row
            - results = []
            - if comp.estimate_points
              - results << "<span class='card__sub-result card__sub-result--estimate'>#{estimate_points_print series.race, comp}</span>"
            - if comp.arrival_time && series.time_points?
              - results << "<span class='card__sub-result card__sub-result--time'>#{comp.time_points(unofficials_rule)} (#{time_from_seconds(comp.time_in_seconds)})</span>"
            - if comp.shooting_score
              - results << "<span class='card__sub-result card__sub-result--shoot'>#{shooting_points_print(comp, true, true)}</span>"
            = raw results.join(' ')
      %div.card__main-value
        = points_print(comp, unofficials_rule)
        - if comp.points.to_i >= @max_points.to_i
          = national_record_print(comp)
    - prev_competitor_results = competitor_results
